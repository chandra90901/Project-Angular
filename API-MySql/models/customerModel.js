// models/customerModel.js
const { db } = require("../db");

exports.createCustomer = async (customerData) => {
    const {
        Title,
        CustomerName,
        EntityTypeId,
        Email,
        MobileNumber,
        CustomerGSTIN,
        FillingStatusId,
        BranchName,
        DisplayName,
        PhoneNumber,
        Fax,
        AccountNumber,
        AccountName,
        BankId,
        IfscCode,
        AccountTypeId,
        BankingBranchName,
        Address1,
        Address2,
        City,
        Pincode,
        StateId,
        CountryId,
        AccountBranchName,
        AccountGstin,
        AccountEMail,
        AccountMobileNumber,
        ShippingAddress1,
        ShippingAddress2,
        ShippingCity,
        ShippingPincode,
        ShippingStateId,
        ShippingCountryId,
        ShippingBranchName,
        ShippingGstin,
        ShippingEMail,
        ShippingMobileNumber
    } = customerData;

    const [result] = await db.query(
        `INSERT INTO Customer (
            Title,
        CustomerName,
        EntityTypeId,
        Email,
        MobileNumber,
        CustomerGSTIN,
        FillingStatusId,
        BranchName,
        DisplayName,
        PhoneNumber,
        Fax,
        AccountNumber,
        AccountName,
        BankId,
        IfscCode,
        AccountTypeId,
        BankingBranchName,
        Address1,
        Address2,
        City,
        Pincode,
        StateId,
        CountryId,
        AccountBranchName,
        AccountGstin,
        AccountEMail,
        AccountMobileNumber,
        ShippingAddress1,
        ShippingAddress2,
        ShippingCity,
        ShippingPincode,
        ShippingStateId,
        ShippingCountryId,
        ShippingBranchName,
        ShippingGstin,
        ShippingEMail,
        ShippingMobileNumber
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?);`,
        [
            Title,
            CustomerName,
            EntityTypeId,
            Email,
            MobileNumber,
            CustomerGSTIN,
            FillingStatusId,
            BranchName,
            DisplayName,
            PhoneNumber,
            Fax,
            AccountNumber,
            AccountName,
            BankId,
            IfscCode,
            AccountTypeId,
            BankingBranchName,
            Address1,
            Address2,
            City,
            Pincode,
            StateId,
            CountryId,
            AccountBranchName,
            AccountGstin,
            AccountEMail,
            AccountMobileNumber,
            ShippingAddress1,
            ShippingAddress2,
            ShippingCity,
            ShippingPincode,
            ShippingStateId,
            ShippingCountryId,
            ShippingBranchName,
            ShippingGstin,
            ShippingEMail,
            ShippingMobileNumber
        ]
    );

    return result.insertId;
};
exports.getAllCustomers = async () => {
    const [results] = await db.query(`SELECT 
    C.*,
    ET.Data AS EntityType,
    FS.Data AS FillingStatus,
    BI.Data AS BankName,
    AT.Data AS AccountType,
    SI.Data AS StateName,
    CI.Data AS CountryName,
    SS.Data AS ShippingStateName,
    SC.Data AS ShippingCountryName
FROM Customer C
LEFT JOIN Masters ET ON ET.Id = C.EntityTypeId 
LEFT JOIN Masters FS ON FS.Id = C.FillingStatusId 
LEFT JOIN Masters BI ON BI.Id = C.BankId
LEFT JOIN Masters AT ON AT.Id = C.AccountTypeId
LEFT JOIN Masters SI ON SI.Id = C.StateId
LEFT JOIN Masters CI ON CI.Id = C.CountryId 
LEFT JOIN Masters SS ON SS.Id = C.ShippingStateId
LEFT JOIN Masters SC ON SC.Id = C.ShippingCountryId;`);
    return results;
};

exports.getCustomerById = async (id) => {
    const [result] = await db.query("SELECT * FROM Customer WHERE Id = ?", [id]);
    return result.length > 0 ? result[0] : null;
};
exports.updateCustomer = async (id, customerData) => {
    const {
        Title,
        CustomerName,
        EntityTypeId,
        Email,
        MobileNumber,
        CustomerGSTIN,
        FillingStatusId,
        BranchName,
        DisplayName,
        PhoneNumber,
        Fax,
        AccountNumber,
        AccountName,
        BankId,
        IfscCode,
        AccountTypeId,
        BankingBranchName,
        Address1,
        Address2,
        City,
        Pincode,
        StateId,
        CountryId,
        AccountBranchName,
        AccountGstin,
        AccountEMail,
        AccountMobileNumber,
        ShippingAddress1,
        ShippingAddress2,
        ShippingCity,
        ShippingPincode,
        ShippingStateId,
        ShippingCountryId,
        ShippingBranchName,
        ShippingGstin,
        ShippingEMail,
        ShippingMobileNumber
    } = customerData;

    await db.query(
        `UPDATE Customer SET Title = ?, 
        CustomerName = ?, 
        EntityTypeId = ?, 
        Email = ?, 
        MobileNumber = ?, 
        CustomerGSTIN = ?, 
        FillingStatusId = ?, 
        BranchName = ?, 
        DisplayName = ?, 
        PhoneNumber = ?, 
        Fax = ?, 
        AccountNumber = ?, 
        AccountName = ?, 
        BankId = ?, 
        IfscCode = ?, 
        AccountTypeId = ?, 
        BankingBranchName = ?, 
        Address1 = ?, 
        Address2 = ?, 
        City = ?, 
        Pincode = ?, 
        StateId = ?, 
        CountryId = ?, 
        AccountBranchName = ?, 
        AccountGstin = ?, 
        AccountEMail = ?, 
        AccountMobileNumber = ?, 
        ShippingAddress1 = ?, 
        ShippingAddress2 = ?, 
        ShippingCity = ?, 
        ShippingPincode = ?, 
        ShippingStateId = ?, 
        ShippingCountryId = ?, 
        ShippingBranchName = ?, 
        ShippingGstin = ?, 
        ShippingEMail = ?, 
        ShippingMobileNumber = ?
     WHERE Id = ?`,
        [
            Title,
            CustomerName,
            EntityTypeId,
            Email,
            MobileNumber,
            CustomerGSTIN,
            FillingStatusId,
            BranchName,
            DisplayName,
            PhoneNumber,
            Fax,
            AccountNumber,
            AccountName,
            BankId,
            IfscCode,
            AccountTypeId,
            BankingBranchName,
            Address1,
            Address2,
            City,
            Pincode,
            StateId,
            CountryId,
            AccountBranchName,
            AccountGstin,
            AccountEMail,
            AccountMobileNumber,
            ShippingAddress1,
            ShippingAddress2,
            ShippingCity,
            ShippingPincode,
            ShippingStateId,
            ShippingCountryId,
            ShippingBranchName,
            ShippingGstin,
            ShippingEMail,
            ShippingMobileNumber,
            id,
        ]
    );
};

exports.deleteCustomer = async (id) => {
    await db.query("DELETE FROM Customer WHERE Id = ?", [id]);
};